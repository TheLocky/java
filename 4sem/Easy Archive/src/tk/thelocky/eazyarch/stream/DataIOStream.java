package tk.thelocky.eazyarch.stream;

import com.sun.istack.internal.NotNull;

import java.io.IOException;

/**
 * Версия 2
 * Лог изменений:
 * - добавлена @NotNull аннотация для read и write функций.
 * - функция remind переименована в rewind.
 *
 * Версия 3
 * Лог изменений:
 * - теперь функции выбрасывают IOException.
 *
 * Версия 4
 * Лог изменений:
 * - добавлена функция size.
 *
 * Версия 5
 * Лог изменений:
 * - функция rewind теперь ничего не возвращает.
 * - добавлена функция seek.
 * - добавлена функция pos.
 * - функция read переименована в функцию getc.
 * - функция write переименована в функцию putc.
 * - теперь функции не выбрасывают исключений.
 */
public interface DataIOStream {
    /**
     * Читает блок байт размером b.length
     * @param b Массив байт, куда будет считан результат
     * @return Количество считанных байт
     */
    int read(@NotNull byte[] b);

    /**
     * Записывает блок байт размером b.length
     * @param b Массив байт, который будет записан
     * @return Количество записанных байт
     */
    int write(@NotNull byte[] b);

    /**
     * Читает один байт, если произошла ошибка fail вернет true
     * @return Считанный байт
     */
    byte getc();

    /**
     * Записывает один байт, если произошла ошибка fail вернет true
     * @param b Байт, который будет записан
     */
    boolean putc(byte b);

    /**
     * Устанавливает положение в начало потока
     */
    void rewind();

    /**
     * Устанавливает текущую позицию
     * @param pos необходимая позиция
     */
    boolean seek(long pos);

    /**
     * Возвращает текущую позицию
     * @return текущая позиция
     */
    long pos();

    /**
     * Проверяет, достигнут ли конец потока
     * @return true, если достигнут
     */
    boolean eof();

    /**
     * Проверяет, выполнилась ли предыдущая операция успешно
     * @return false, если успешно
     */
    boolean fail();

    /**
     * Возвращает размер данных
     * @return длинна данных в потоке в байтах
     */
    long size();
}
